%% KPC
tic

N = 50; 
% initial values
x0_original = [3e4, 5e4, 0, 0, 0, 0, 0];

% step size and time interval in days
tspan = 0.0:0.05:600;
% k1 = p[1] = kon,  k3 = p[2], kmenos1 = p[3], w = p[4], k2 = p[5], kmenos2 = p[6]
p = [10, 1, 0.1, 1, 1, 10];

tic
KPC = @(t,y)ODEKPC(t, y, p);
options = odeset('RelTol',1e-5,'AbsTol',1e-6, 'Refine', 1);
[t,x] = ode45(KPC, tspan, x0, options);
toc



plot(tspan,x(:,7));

% Vector logarítmico de valores de x0(2)
x0_values = logspace(0, 7, N);
max_x7_values = zeros(size(x0_values));

% Bucle sobre cada valor de x0(2)
for i = 1:N
    x0 = x0_original;
    x0(2) = x0_values(i); % Modificamos el segundo valor de x0
    
    % Resolver la ODE
    KPC = @(t,y)ODEKPC(t, y, p);
    [t, x] = ode45(KPC, tspan, x0, options);
    
    % Obtener el valor máximo de x(7)
    max_x7_values(i) = max(x(:,7));
end

% Graficar los resultados
figure;
semilogx(x0_values, max_x7_values, '-o');
xlabel('Valor inicial de x_0(2)');
ylabel('Máximo de x(7)');
title('Variación del máximo de x(7) con x_0(2)');
grid on;

function dx = ODEKPC(t, x, p)
    dx = zeros(7,1);
    dx(1) = -p(1) * x(1) * x(2) + p(2) * x(4) + p(3) * (x(5) + x(6) + x(7));
    dx(2) = -p(1) * x(1) * x(2) + p(4) * x(7) + p(3) * (x(5) + x(6) + x(7)) ...
            - p(5) * x(3) * x(2) + p(6) * x(4) + p(2) * x(4);
    dx(3) = p(4) * x(7) - p(5) * x(3) * x(2) + p(6) * x(4);
    dx(4) = p(5) * x(3) * x(2) - (p(6) + p(2)) * x(4);
    dx(5) = p(1) * x(1) * x(2) - (p(3) + p(4)) * x(5);
    dx(6) = -p(3) * x(6) - p(4) * x(6) + p(4) * x(5);
    dx(7) = -p(3) * x(7) - p(4) * x(7) + p(4) * x(6);
end

toc

