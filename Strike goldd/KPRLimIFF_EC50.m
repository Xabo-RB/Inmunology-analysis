%--------------------------------------------------------------------------
% KPR Limited Signaling IFF
% The model is taken from:
%--------------------------------------------------------------------------
% Lever, M., Lim, H. S., Kruger, P., Nguyen, J., Trendel, 2., Abu-Shah, E., ... & Dushek, O. (2016). 
% Architecture of a minimal signaling pathway explains the T-cell response to a 1 million-fold variation in antigen affinity and dose. 
% Proceedings of the National Academy of Sciences, 113(43), E6630-E6638.
%--------------------------------------------------------------------------

clear all;

syms kon koff kp phi gammaPos gammaNeg lambda delta mu YT PT
p = [kon; koff; kp; phi; gammaPos; gammaNeg; lambda; delta; mu; YT; PT];

syms L R C0 C1 C2 Y P
x = [L; R; C0; C1; C2; Y; P];

f = [
    -kon * L * R + koff * C0 + koff * C1 + koff * C2;                 % L'(t)
    -kon * L * R + koff * C0 + koff * C1 + koff * C2;                 % R'(t)
    kon * L * R - (koff + kp) * C0;                                  % C0'(t)
    kp * C0 - (koff + phi * kp) * C1;                                % C1'(t)
    phi * kp * C1 - koff * C2;                                       % C2'(t)
    gammaPos * (YT - Y) - gammaNeg * Y + lambda * C1 * (YT - Y);     % Y'(t)
    gammaPos * (PT - P) - gammaNeg * P + delta * Y * (PT - P) - mu * C1 * P % P'(t)
];


%% EC50

h = [
    (-1)*(-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3))...
        * (R + C0 + C1 + C2) + sqrt(-(koff/kon)^2 - 2 * (-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3))...
        * (koff/kon) * (R + C0 + C1 + C2) - 2 * (-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3))...
        * (R + C0 + C1 + C2) + 5 * ((-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3)))^2*(R + C0 + C1 + C2)^2)];

%% EC50 y TT

h = [
    (-1)*(-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3))...
        * (R + C0 + C1 + C2) + sqrt(-(koff/kon)^2 - 2 * (-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3))...
        * (koff/kon) * (R + C0 + C1 + C2) - 2 * (-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3))...
        * (R + C0 + C1 + C2) + 5 * ((-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3)))^2*(R + C0 + C1 + C2)^2);
        R + C0 + C1 + C2];

%% EC50 y T(t)

h = [
    (-1)*(-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3))...
        * (R + C0 + C1 + C2) + sqrt(-(koff/kon)^2 - 2 * (-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3))...
        * (koff/kon) * (R + C0 + C1 + C2) - 2 * (-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3))...
        * (R + C0 + C1 + C2) + 5 * ((-2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 2 * delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - delta * (gammaNeg/gammaPos) * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - ...
        2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - 3 * (gammaNeg/gammaPos) * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - (gammaNeg/gammaPos)^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) - lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - 2 * delta * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta^2 * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * (gammaNeg/gammaPos) * lambda^2 * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - delta * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 -...
        delta * (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 - ((((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) * (2 + (gammaNeg/gammaPos) + lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi)) + delta * lambda * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))) * ...
        sqrt(lambda^2 + 2 * delta * lambda^2 + delta^2 * lambda^2 + 2 * (gammaNeg/gammaPos) * lambda^2 + 2 * delta * (gammaNeg/gammaPos) * lambda^2 + (gammaNeg/gammaPos)^2 * lambda^2 - 2 * ...
        lambda * mu - 2 * delta * lambda * mu - 4 * (gammaNeg/gammaPos) * lambda * mu + 2 * delta * (gammaNeg/gammaPos) * lambda * mu - 2 * (gammaNeg/gammaPos)^2 * lambda * mu + mu^2 + 2 * ...
        (gammaNeg/gammaPos) * mu^2 + (gammaNeg/gammaPos)^2 * mu^2)))/(2 * (2 * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + (gammaNeg/gammaPos) * lambda * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^2 + lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3 + delta * lambda^2 * mu * (((1 - (kp / (koff + kp))^2) * koff) / (koff + phi))^3)))^2*(R + C0 + C1 + C2)^2);
        R];


%% initial conditions:
ics  = [];   

% which initial conditions are known:
known_ics = [0,0,0,0,0,0,0]; 

u = [];
w = [];
save('KPRLimIFF_EC50','x','p','u','w','h','f','ics','known_ics');

