%--------------------------------------------------------------------------
% KPR Limited Signaling IFF
% The model is taken from:
%--------------------------------------------------------------------------
% Lever, M., Lim, H. S., Kruger, P., Nguyen, J., Trendel, 2., Abu-Shah, E., ... & Dushek, O. (2016). 
% Architecture of a minimal signaling pathway explains the T-cell response to a 1 million-fold variation in antigen affinity and dose. 
% Proceedings of the National Academy of Sciences, 113(43), E6630-E6638.
%--------------------------------------------------------------------------

clear all;

syms kon koff kp phi gyp gym gpp gpm lambda Delta mu YT PT
p = [kon; koff; kp; phi; gyp; gym; gpp; gpm; lambda; Delta; mu; YT; PT];

syms L R C0 C1 C2 C3 C4 C5 Y P
x = [L; R; C0; C1; C2; Y; P];

f = [
    -kon * L * R + koff * C0 + koff * C1 + koff * C2 + koff * C3 + koff * C4 + koff * C5 + koff * C6;% L'(t)
    -kon * L * R + koff * C0 + koff * C1 + koff * C2 + koff * C3 + koff * C4 + koff * C5 + koff * C6;                 % R'(t)
    kon * L * R - (koff + kp) * C0;                                  % C0'(t)
    kp * C0 - (koff + kp) * C1;                                % C1'(t)
    kp * C1 - (koff + kp) * C2; 
    kp * C2 - (koff + kp) * C3; 
    kp * C3 - (koff + kp) * C4; 
    phi * C1 - koff * C2;                                       % C2'(t)
    gyp * (YT - Y) - gym * Y + lambda * C1 * (YT - Y);     % Y'(t)
    gpp * (PT - P) - gpm * P + Delta * Y * (PT - P) - mu * C1 * P % P'(t)
];

h = [(PT*(YT* Delta *(gyp + (((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + ...
            (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu * ...
                 (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)* ...
                    mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta * ...
                     lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT* ...
                         Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT* ...
                         Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                       YT* Delta )* lambda ^2)* mu )^2)) - ...
              ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda * mu *(-(gpm*gym*YT* Delta * lambda * ...
                  (YT* Delta *(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ...
                     ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )* ...
                 (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ((koff / (koff + phi)) * ...
                 (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* ...
                      lambda ) + YT* Delta *(gym*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + ...
                    (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + ...
                    (R+C0+C1+C2+C3+C4+C5))* lambda )))*...
                  mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + YT* Delta )* lambda ^2* mu *...
              (-(gpm*gym*YT* Delta * lambda ) + gpp*(gym + gyp + ...
                  ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + YT* Delta *(gym*gyp + ...
                 (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) - ...
            sqrt((-4*(R+C0+C1+C2+C3+C4+C5)*(sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu * ...
                    (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)* ...
                       mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta * ...
                        lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT* ...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT* ...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                          YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda * ...
                   mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta * ...
                       (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* ...
                          lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )* ...
                    (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ... 
                       ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda ) + YT* Delta *(gym*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))* mu )))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2* ...
                (gpp + YT* Delta )* lambda ^2* mu *(-(gpm*gym*YT* Delta * ...
                    lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + ...
                 YT* Delta *(gym*gyp + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) +  ...
              ((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu * ...
                     (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)* ...
                        mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta * ...
                         lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT* ...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT* ...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp +  ...
                          YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda * ...
                    mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta * ...
                        (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* ...
                           lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )* ...
                     (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ...
                        ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda ) + YT* Delta *(gym*(gyp + ...
                          ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ...
                          ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))* mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + ...
                   YT* Delta )* lambda ^2* mu *(-(gpm*gym*YT* Delta *...
                      lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + ... 
                   YT* Delta *(gym*gyp + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )))^ ...
               2)))/2) + gpp*(gym + gyp + ...
         (((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* ...
                  mu *(-(gpm*(gpp + YT* Delta )* lambda ) + ...
                  gpp*(gym + gyp)* mu  + gyp*YT* Delta * mu )* ...
                 (gpm*gym*YT* Delta * lambda  - ((gym + gyp)* ...
                      (gpp*(gym + gyp) + gyp*YT* Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* ...
                      (gpp*(gym + gyp) + gyp*YT* Delta )* lambda  + ...
                     ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + YT* Delta )* lambda ^2)* mu )^...
                  2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda * mu *(-(gpm*gym*YT* Delta * lambda *...
                  (YT* Delta *(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ...
                     ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )*...
                 (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ((koff / (koff + phi)) * ...
                 (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*...
                      lambda ) + YT* Delta *(gym*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + ...
                    (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + ...
                    (R+C0+C1+C2+C3+C4+C5))* lambda )))*...
                  mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + YT* Delta )* lambda ^2* mu * ...
              (-(gpm*gym*YT* Delta * lambda ) + gpp*(gym + gyp + ...
                  ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + YT* Delta *(gym*gyp + ...
                 (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) - ...
            sqrt((-4*(R+C0+C1+C2+C3+C4+C5)*(sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu * ...
                    (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)* ...
                       mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta * ...
                        lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT* ...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT* ...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                          YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda * ...
                   mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta * ...
                       (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)*...
                          lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )*...
                    (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ...
                       ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda ) + YT* Delta *(gym*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))* mu )))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*...
                (gpp + YT* Delta )* lambda ^2* mu *(-(gpm*gym*YT* Delta *...
                    lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + ...
                 YT* Delta *(gym*gyp + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) + ...
              ((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu *...
                     (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                        mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                         lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                          YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *...
                    mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta *...
                        (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)*...
                           lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )*...
                     (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ...
                        ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda ) + YT* Delta *(gym*(gyp + ...
                          ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ...
                          ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))* mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + ...
                   YT* Delta )* lambda ^2* mu *(-(gpm*gym*YT* Delta *...
                      lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + ...
                   YT* Delta *(gym*gyp + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )))^...
               2)))/2)))/...
     (YT* Delta *(gyp + (((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + ...
           (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu * ...
                (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                   mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                    lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                        Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT* Delta )*...
                      lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + YT* Delta )*...
                      lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda * mu *...
              (-(gpm*gym*YT* Delta * lambda *(YT* Delta *(gyp + ...
                    ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ))) + ...
               (gpp*(gym + gyp) + gyp*YT* Delta )*(gpp*(gym + gyp + ...
                   ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) ...
                   + (R+C0+C1+C2+C3+C4+C5))* lambda ) + ...
                 YT* Delta *(gym*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + ...
                   (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) ...
                   + (R+C0+C1+C2+C3+C4+C5))* lambda )))*...
                 mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + YT* Delta )* lambda ^2* mu *...
             (-(gpm*gym*YT* Delta * lambda ) + gpp*(gym + gyp + ...
                 ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + YT* Delta *(gym*gyp + ...
                (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) -... 
           sqrt((-4*(R+C0+C1+C2+C3+C4+C5)*(sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu *...
                   (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                      mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                       lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                         YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *...
                  mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta *...
                      (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)*...
                         lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )*...
                   (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ((koff / (koff + phi)) * ...
                   (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*...
                        lambda ) + YT* Delta *(gym*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + ...
                      (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + ...
                      (R+C0+C1+C2+C3+C4+C5))* lambda )))*...
                    mu )))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + YT* Delta )* lambda ^2* mu *(...
                -(gpm*gym*YT* Delta * lambda ) + gpp*(gym + gyp + ...
                   ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + YT* Delta *(gym*gyp + ...
                  (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) + ...
             ((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu *...
                    (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                       mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                        lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                          YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *...
                   mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta *...
                       (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)*...
                          lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )*...
                    (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ...
                       ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda ) + YT* Delta *(gym*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))* mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + ...
                  YT* Delta )* lambda ^2* mu *(-(gpm*gym*YT* Delta *...
                     lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + ...
                  YT* Delta *(gym*gyp + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )))^...
              2)))/2) + (gym + gyp + ...
        (((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu *...
                (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                   mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                    lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                        Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT* Delta )*...
                      lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + YT* Delta )*...
                      lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda * mu *...
              (-(gpm*gym*YT* Delta * lambda *(YT* Delta *(gyp + ...
                    ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ))) + ...
               (gpp*(gym + gyp) + gyp*YT* Delta )*(gpp*(gym + gyp + ...
                   ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda ) + ...
                 YT* Delta *(gym*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + ...
                   (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))*...
                 mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + YT* Delta )* lambda ^2* mu *...
             (-(gpm*gym*YT* Delta * lambda ) + gpp*(gym + gyp + ...
                 ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + YT* Delta *(gym*gyp + ...
                (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) - ...
           sqrt((-4*(R+C0+C1+C2+C3+C4+C5)*(sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu *...
                   (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                      mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                       lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                         YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *...
                  mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta *...
                      (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)*...
                         lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )*...
                   (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) ...
                   + (R+C0+C1+C2+C3+C4+C5))*...
                        lambda ) + YT* Delta *(gym*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + ...
                      (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))*...
                    mu )))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + YT* Delta )* lambda ^2* mu *(...
                -(gpm*gym*YT* Delta * lambda ) + gpp*(gym + gyp + ...
                   ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + YT* Delta *(gym*gyp + ...
                  (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) + ...
             ((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu *...
                    (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                       mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                        lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                          YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *...
                   mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta *...
                       (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)*...
                          lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )*...
                    (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ...
                       ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda ) + YT* Delta *(gym*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))* mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + ...
                  YT* Delta )* lambda ^2* mu *(-(gpm*gym*YT* Delta *...
                     lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + ...
                  YT* Delta *(gym*gyp + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )))^...
              2)))/2)*(gpm + gpp + ...
        (((koff / (koff + phi)) * (kp/(koff+kp))^5)* mu *((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu *...
                (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                   mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                    lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                        Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT* Delta )*...
                      lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + YT* Delta )*...
                      lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda * mu *...
              (-(gpm*gym*YT* Delta * lambda *(YT* Delta *(gyp + ...
                    ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ))) + ...
               (gpp*(gym + gyp) + gyp*YT* Delta )*(gpp*(gym + gyp + ...
                   ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda ) + ...
                 YT* Delta *(gym*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + ...
                   (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))*...
                 mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + YT* Delta )* lambda ^2* mu *...
             (-(gpm*gym*YT* Delta * lambda ) + gpp*(gym + gyp + ...
                 ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + YT* Delta *(gym*gyp + ...
                (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) - ...
           sqrt((-4*(R+C0+C1+C2+C3+C4+C5)*(sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu *...
                   (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                      mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                       lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                         YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *...
                  mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta *...
                      (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)*...
                         lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )*...
                   (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*...
                        lambda ) + YT* Delta *(gym*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + ...
                      (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))*...
                    mu )))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + YT* Delta )* lambda ^2* mu *(...
                -(gpm*gym*YT* Delta * lambda ) + gpp*(gym + gyp + ...
                   ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + YT* Delta *(gym*gyp + ...
                  (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )) + ...
             ((koff/kon) + (R+C0+C1+C2+C3+C4+C5) + (sqrt(-(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*gym*YT* Delta * lambda ^2* mu *...
                    (-(gpm*(gpp + YT* Delta )* lambda ) + gpp*(gym + gyp)*...
                       mu  + gyp*YT* Delta * mu )*(gpm*gym*YT* Delta *...
                        lambda  - ((gym + gyp)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta ) + 2*((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)*(gpp*(gym + gyp) + gyp*YT*...
                           Delta )* lambda  + ((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(R+C0+C1+C2+C3+C4+C5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))*(gpp + ...
                          YT* Delta )* lambda ^2)* mu )^2)) - ((koff / (koff + phi)) * (kp/(koff+kp))^5)* lambda *...
                   mu *(-(gpm*gym*YT* Delta * lambda *(YT* Delta *...
                       (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)*...
                          lambda ))) + (gpp*(gym + gyp) + gyp*YT* Delta )*...
                    (gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gym + gyp + ...
                       ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda ) + YT* Delta *(gym*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(koff/kon)* lambda ) + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )*(gyp + ...
                         ((koff / (koff + phi)) * (kp/(koff+kp))^5)*((koff/kon) + (R+C0+C1+C2+C3+C4+C5))* lambda )))* mu ))/(((koff / (koff + phi)) * (kp/(koff+kp))^5)^2*(gpp + ...
                  YT* Delta )* lambda ^2* mu *(-(gpm*gym*YT* Delta *...
                     lambda ) + gpp*(gym + gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2* mu  + ...
                  YT* Delta *(gym*gyp + (gyp + ((koff / (koff + phi)) * (kp/(koff+kp))^5)*(R+C0+C1+C2+C3+C4+C5)* lambda )^2)* mu )))^...
              2)))/2))];

%% initial conditions:
ics  = [];   

% which initial conditions are known:
known_ics = [0,0,0,0,0,0,0]; 

u = [];
w = [];
save('KPRLimIFF_Emax','x','p','u','w','h','f','ics','known_ics');
